// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id
  username String @unique
}

model Student {
  id            String         @id
  username      String         @unique
  name          String
  surname       String
  email         String?        @unique
  phone         String?        @unique
  address       String
  img           String?
  bloodType     String
  sex           userSex
  createdAt     DateTime       @default(now())
  parentId      String
  parent        Parent         @relation(fields: [parentId], references: [id])
  classId       Int
  class         Class          @relation(fields: [classId], references: [id])
  gradeId       Int?
  grade         Grade?         @relation(fields: [gradeId], references: [id])
  results       Result[]
  attendances   Attendance[]
  Event         Event?         @relation(fields: [eventId], references: [id])
  eventId       Int?
  announcements Announcement[]
}

model Teacher {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String?   @unique
  address   String
  img       String?
  createdAt DateTime  @default(now())
  subjects  Subject[]
  lessons   Lesson[]
  classes   Class[]
  exams     Exam[]
  events    Event[]
}

model Subject {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  teachers Teacher[]
  lessons  Lesson[]
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name      String
  day       Day
  startTime DateTime
  endTime   DateTime
  subjectId Int
  subject   Subject? @relation(fields: [subjectId], references: [id])
  teacherId String?
  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  classId   Int?
  class     Class?   @relation(fields: [classId], references: [id])

  exams       Exam[]
  assignments Assignment[]
  attendances Attendance[]
}

model Class {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  capacity      Int
  lessons       Lesson[]
  supervisorId  String
  supervisor    Teacher?       @relation(fields: [supervisorId], references: [id])
  students      Student[]
  gradeId       Int?
  grade         Grade?         @relation(fields: [gradeId], references: [id])
  exams         Exam[]
  events        Event[]
  announcements Announcement[]
}

model Parent {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String    @unique
  address   String
  img       String?
  createdAt DateTime  @default(now())
  students  Student[]
}

model Grade {
  id       Int       @id @default(autoincrement())
  level    Int       @unique
  students Student[]
  classes  Class[]
}

model Exam {
  id        Int      @id @default(autoincrement())
  title     String
  startTime DateTime
  endTime   DateTime
  lessonId  Int
  lesson    Lesson?  @relation(fields: [lessonId], references: [id])
  teacherId String?
  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  classId   Int?
  class     Class?   @relation(fields: [classId], references: [id])
  results   Result[]
}

model Assignment {
  id        Int      @id @default(autoincrement())
  title     String
  startDate DateTime
  dueDate   DateTime
  lessonId  Int
  lesson    Lesson?  @relation(fields: [lessonId], references: [id])
  results   Result[]
}

model Result {
  id           Int         @id @default(autoincrement())
  score        Int
  examId       Int?
  exam         Exam?       @relation(fields: [examId], references: [id])
  assignmentId Int?
  assignment   Assignment? @relation(fields: [assignmentId], references: [id])
  studentId    String?
  student      Student?    @relation(fields: [studentId], references: [id])
}

model Attendance {
  id        Int      @id @default(autoincrement())
  date      DateTime
  status    Boolean
  lessonId  Int
  lesson    Lesson?  @relation(fields: [lessonId], references: [id])
  studentId String
  student   Student? @relation(fields: [studentId], references: [id])
}

model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  classId     Int
  class       Class?    @relation(fields: [classId], references: [id])
  student     Student[]
  teacher     Teacher?  @relation(fields: [teacherId], references: [id])
  teacherId   String?
}

model Announcement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  classId     Int
  class       Class?   @relation(fields: [classId], references: [id])
  Student     Student? @relation(fields: [studentId], references: [id])
  studentId   String?
}

enum userSex {
  Male
  Female
}

enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}
